{"name":"lein-plantuml","tagline":"A Leiningen plugin for generating UML diagrams using PluntUML","body":"lein-plantuml\r\n=============\r\n\r\nA Leiningen plugin for generating UML diagrams using [PlantUML](http://plantuml.sourceforge.net).\r\n\r\n\r\nPre-requirements\r\n================\r\n\r\nInstall [Graphviz](http://www.graphviz.org) to use lein-plantuml plugin.\r\n\r\nOn Ubuntu:\r\n```\r\nsudo apt-get install graphviz\r\n```\r\nOn Mac OS X:\r\n```\r\nbrew install graphviz\r\n```\r\n\r\n\r\nInstallation\r\n============\r\n\r\nTo enable lein-plantuml for your project, put the following in the :plugins vector of your project.clj file:\r\n\r\n![latest-version](https://clojars.org/lein-plantuml/latest-version.svg)\r\n\r\n[![Build Status](https://travis-ci.org/vbauer/lein-plantuml.svg?branch=master)](https://travis-ci.org/vbauer/lein-plantuml)\r\n[![Dependencies Status](http://jarkeeper.com/vbauer/lein-plantuml/status.png)](http://jarkeeper.com/vbauer/lein-plantuml)\r\n\r\nConfiguration\r\n=============\r\n\r\nTo configure PlantUML generator, you need to setup :plantuml option as a list of triplets:\r\n\"glob pattern\" [\"file format\"] [\"output directory\"]\r\n\r\nDescription:\r\n- *Glob pattern* is based on wildcard characters, see [Glob](http://en.wikipedia.org/wiki/Glob_(programming)) for additional information.\r\n- *Files format* is a image file format for output data (optional parameter).\r\n- *Output directory* is an optional parameter, files will be generated in the same directory by default.\r\n\r\nFile formats:\r\n- :eps - Encapsulated PostScript format\r\n- :svg - Scalable Vector Graphics format\r\n- :png - Portable Network Graphics format\r\n- :pdf - Portable Document Format\r\n- :text, :utext - Text file format\r\n\r\nExample configuration:\r\n\r\n```clojure\r\n  :plantuml [[\"resources/*.puml\" :png \"target\"]\r\n             [\"presentation/*.txt\" :svg]]\r\n```\r\n\r\n\r\nUsage\r\n=====\r\n\r\nTo generate UML image files using configuration from project.clj, you should use use:\r\n\r\n```\r\nlein plantuml\r\n```\r\n\r\nTo enable this plugin at compile stage, use the following hook:\r\n```clojure\r\n:hooks [leiningen.plantuml]\r\n```\r\n\r\n\r\nExample\r\n=======\r\n\r\nTo test the plugin, you can create a simple file and run lein-plantuml:\r\n```\r\n@startuml\r\n\r\nUser -> (Start)\r\nUser --> (Use the application) : A small label\r\n\r\n:Main Admin: ---> (Use the application) : This is\\nyet another\\nlabel\r\n\r\n@enduml\r\n```\r\nOutput UML diagram should look like this:\r\n\r\n![uml-example](http://plantuml.sourceforge.net/imgp/usecase_003.png)\r\n\r\nMore examples could be found here:\r\n- [Sequence Diagram](http://plantuml.sourceforge.net/sequence.html)\r\n- [Use Case Diagram](http://plantuml.sourceforge.net/usecase.html)\r\n- [Class Diagram](http://plantuml.sourceforge.net/classes.html)\r\n- [Activity Diagram](http://plantuml.sourceforge.net/activity.html) + [(more)](http://plantuml.sourceforge.net/activity2.html)\r\n- [Component Diagram](http://plantuml.sourceforge.net/component.html)\r\n- [State Diagram](http://plantuml.sourceforge.net/state.html)\r\n- [Object Diagram](http://plantuml.sourceforge.net/objects.html)\r\n\r\n\r\nLicense\r\n=======\r\n\r\nCopyright Â© 2014 Vladislav Bauer\r\n\r\nDistributed under the Eclipse Public License, the same as Clojure.\r\n\r\n\r\nMight also like\r\n===============\r\n\r\n* [lein-jshint](https://github.com/vbauer/lein-jshint) - a Leiningen plugin for running javascript code through JSHint\r\n* [lein-jslint](https://github.com/vbauer/lein-jslint) - a Leiningen plugin for running javascript code through JSLint\r\n","google":"","note":"Don't delete this file! It's used internally to help with page regeneration."}